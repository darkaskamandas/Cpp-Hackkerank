#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
 
class Person {
    string name;
    int age;
public:
    virtual void getdata() {
        cin >> name >> age;
    }
    
    virtual ostream &putdata() {
        return cout << name << " " << age;
    }
};

class Professor : public Person {
    int publications;
    int cur_;
    static int id;
public:
    Professor() : cur_(++id) {}
    
    virtual void getdata() {
        Person::getdata();
        cin >> publications;
    }
    
    virtual ostream &putdata() {
        return Person::putdata() << " " << publications << " " << cur_ << endl;
    }
};

class Student : public Person {

    int cur_, marks;
    static int id;
public:
    Student() : cur_(++id) {}
    
    virtual void getdata() {
        Person::getdata();
        marks = 0;
        for (int i = 0; i < 6; i++) {
            int m;
            cin >> m;
            marks += m;
        }
    }
    
    virtual ostream &putdata() {
        return Person::putdata() << " " << marks << " " << cur_ << endl;
    }
};

int Student::id, Professor::id;
int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;

}
